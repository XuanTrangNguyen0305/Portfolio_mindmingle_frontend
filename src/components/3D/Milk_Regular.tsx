/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import {
  MeshTransmissionMaterial,
  MeshWobbleMaterial,
  Outlines,
  useGLTF,
} from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { color } from "three/examples/jsm/nodes/Nodes.js";

type GLTFResult = GLTF & {
  nodes: {
    Milk: THREE.Mesh;
  };
  materials: {};
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("./3D/Milk.glb") as GLTFResult;
  return (
    <group {...props} dispose={null} renderOrder={0}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Milk.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <meshLambertMaterial transparent opacity={0.6} color={"#e3e3e8"} />

        <Outlines thickness={0.1} color={"#535365"} />
      </mesh>
    </group>
  );
}

useGLTF.preload("/Milk.glb");
