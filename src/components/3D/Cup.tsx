// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import * as THREE from "three";
// import React, { useRef } from "react";
// import { useGLTF } from "@react-three/drei";
// import { GLTF } from "three-stdlib";

// type GLTFResult = GLTF & {
//   nodes: {
//     Cup: THREE.Mesh;
//   };
//   materials: {};
// };

// export default function Model(props: JSX.IntrinsicElements["group"]) {
//   const { nodes } = useGLTF("/3D/cup.glb") as GLTFResult;
//   return (
//     <group {...props} dispose={null}>
//       <mesh geometry={nodes.Cup.geometry} rotation={[Math.PI / 2, 0, 0]}>
//         <meshPhongMaterial transparent={true} opacity={0.6} color="#c3c0ce" />
//       </mesh>
//     </group>
//   );
// }

// useGLTF.preload("/cup.glb");

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cup: THREE.Mesh;
  };
  materials: {};
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("3D/cup.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Cup.geometry}
        material={nodes.Cup.material}
        rotation={[Math.PI / 2, 0, 0]}
        userData={{ name: "Cup" }}
      />
    </group>
  );
}

useGLTF.preload("/cup.glb");
