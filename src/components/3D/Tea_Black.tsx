/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import {
  Cylinder,
  GradientTexture,
  GradientType,
  MeshTransmissionMaterial,
  MeshWobbleMaterial,
  Outlines,
  useGLTF,
} from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Tea: THREE.Mesh;
  };
  materials: {
    Tea_initialShadingGroup: THREE.MeshPhysicalMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("./3D/Tea.glb") as GLTFResult;
  return (
    <group {...props} dispose={null} renderOrder={1}>
      <mesh geometry={nodes.Tea.geometry} rotation={[Math.PI / 2, 0, 0]}>
        <meshLambertMaterial
          transparent
          opacity={0.4}
          color={"#5b2727"}
        ></meshLambertMaterial>
        <Outlines thickness={0.1} color={"#241010"} />
      </mesh>
      {/* </Cylinder> */}
    </group>
  );
}

useGLTF.preload("/Tea.glb");
